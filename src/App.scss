// COLORS
$color-past: rgb(25,96,107);
$color-ongoing: rgb(182,119,35);
$color-proposed: rgb(225,87,90);
// mapbox values (equivalent in hue to above, but semi-transparent to reveal ovelrap etc)
// $color-past: rgba(0,80,92,.9);
// $color-ongoing: rgba(175,105,12,.9);
// $color-proposed: rgba(223,70,73,.9);
$light-gray: #f7f7f7;
$semi-trans-light-gray: transparentize($light-gray, .2);
$trans-light-gray: transparentize($light-gray, .4);
$middle-gray: #eee;
$trans-middle-gray: transparentize($middle-gray, .5);
$dark-gray: #ccc;

// SIZES
$FS-boundary-padding: 8px;
$SS-legend-height: 130px;
$FS-card-width: 300px;
$FS-dock-width: $FS-card-width * 3;
$scroll-hint-width: 200px;
$scroll-hint-height: 40px;
$selection-hint-width: 230px;
$selection-hint-height: 134px;
$max-point-hint-width: 425px;
$max-point-hint-height: 85px;
$card-peek-height: 100px;
$intro-panel-width: 390px;
$intro-panel-icon-offset: 8px;

* {
  margin: 0;
  padding: 0;
  word-wrap: break-word;
  user-select: none;
  cursor: default;
  font-family: sofia-pro, sans-serif;
  font-weight: 400;
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
}

html, body, #root, .app, .map-container {
  height: 100%;
  width: 100%;
}

.trigger-icon {
  stroke: black;
  stroke-width: 3;
  cursor: pointer;
  fill: none;
}

.app {
  /* necessary to prevent dock from overflowing page on mobile */
  position: absolute;
  overflow: scroll;
  // filter messes with positioning of app/children. behaves correctly without implicitly setting
  // filter: blur(0px);
  transition: filter 2s ease;

  &.loading {
    filter: blur(4px);
  }
}

.mask {
  position: fixed;
  display: flex;
  height: 100%;
  width: 100%;
  z-index: 100;
  background-color: $trans-light-gray;
  opacity: 1;
  &.loaded {
    background-color: rgba(0,0,0,0);
    opacity: 0;
    transform: translate(100%, 100%);
    transition: background-color ease 2s, opacity ease 1s .5s, transform ease 0s 2s;
  }
  .content {
    margin: auto;
    font-size: 22px;
    text-transform: uppercase;
    color: $color-past;
    transform: translate(0,16px);
    .loading-dots {
      display: flex;
      justify-content: space-evenly;
      padding: 4px 4px 0 0;
      div {
        width: 18px;
        height: 18px;
        border-radius: 9px;
        animation: ball-pulse 1s ease infinite;
        &:nth-child(1) {
          animation-delay: -.2s;
          background-color: $color-past;
        }
        &:nth-child(2) {
          animation-delay: -.1s;
          background-color: $color-ongoing;
        }
        &:nth-child(3) {
          background-color: $color-proposed;
        }
      }
    }
  }
}

/* INTRO PANEL */
.intro-panel {
  position: fixed;
  left: 0;
  z-index: 3;
  top: $FS-boundary-padding;
  bottom: calc(#{$FS-boundary-padding} + #{$card-peek-height});
  min-height: 120px;
  width: $intro-panel-width;
  background: white;
  border: solid $dark-gray 1px;
  overflow: scroll;
  border-top-right-radius: 4px;
  border-bottom-right-radius: 4px;
  transition: left ease 1s;

  .info-icon {
    stroke-width: 0;
    height: 30px;
    width: 30px;
    position: fixed;
    left: $intro-panel-icon-offset;
    top: calc(#{$FS-boundary-padding} + #{$intro-panel-icon-offset});
    path {
      cursor: pointer;
    }
  }

  &.closed {
    left: -$intro-panel-width;
    .info-icon {
      // position: fixed;
      // left: calc(#{$FS-boundary-padding} + #{$intro-panel-icon-offset});
      // top: calc(#{$FS-boundary-padding} + #{$intro-panel-icon-offset});
    }
  }

  .content {
    padding: 35px 35px 45px 45px;
    // height: 100%;
    h1 {
      font-size: 18px;
      font-weight: 700;
      border-bottom: 1px solid $dark-gray;
      padding-bottom: 20px;
      margin-bottom: 20px;
    }
    h2 {
      font-size: 15px;
      font-weight: 400;
      padding: 10px 0 6px;
    }
    p {
      font-size: 14px;
      font-weight: 300;
      padding: 4px 0;
    }
  }
}


/* MAP */
.map-container {
  position: fixed;
  top: 0;
  bottom: 0;
}

/* LEGEND */
.legend {
  position: fixed;
  top: $FS-boundary-padding;
  right: $FS-boundary-padding;
  background: $semi-trans-light-gray;
  padding: 8px;
  border-radius: 4px;
  font-size: 12px;
  text-transform: uppercase;
  box-shadow: rgba(0, 0, 0, 0.1) 3px 3px 5px;
}
.legend div {
  padding: 4px;
  font-weight: 300;
}

.legend i {
  width: 10px;
  height: 10px;
  display: inline-block;
  border-radius: 5px;
  margin-right: 8px;
}
.legend i.past {
  background: rgba(0,80,92,.8);
}
.legend i.ongoing {
  background: rgba(175,105,12,.8);
}
.legend i.proposed {
  background: rgba(223,70,73,.8);
}

.legend .trigger-icon {
  position: absolute;
  right: 5px;
  top: 5px;
  width: 16px;
  stroke-width: 5;
}

.legend.hidden {
  background: transparent;
  box-shadow: none;
}
.legend.hidden .content {
  display: none;
}

/* TOOLTIP */
.tooltip {
  z-index: 10;
  background: white;
  /* overflows map with absolute */
  position: fixed;
  padding: 15px;
  max-width: 210px;
  box-shadow: rgba(0, 0, 0, 0.1) 3px 3px 5px;
  border-top: gray solid 8px;
  border-radius: 4px;
}

.tooltip.past {
  border-top-color: rgba(0,80,92,.8);
}
.tooltip.ongoing {
  border-top-color: rgba(175,105,12,.8);
}
.tooltip.proposed {
  border-top-color: rgba(223,70,73,.8);
}

.tooltip .detail {
  font-size: 12px;
  padding-top: 5px;
}

.tooltip .name {
  font-weight: 700;
  font-size: 14px;
}

.tooltip .click-hint {
  font-size: 8px;
  padding-top: 5px;
  text-align: center;
}

.tooltip .location-title {
  padding-top: 8px;
  font-weight: 300;
  font-size: 9px;
  text-transform: uppercase;
}

.tooltip .hovered-location.emphasized {
  font-weight: 700;
}

/*{ CARD DOCK */
.card-dock-container {
  background-color: $middle-gray;

  z-index: 5;
  position: absolute;
  /* dock background initially just off-screen, appears when user scrolls up */
  top: 100vh;
  width: 100%;
  box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 10px 3px;

  .user-hint {
    text-transform: uppercase;
    background: rgb(244, 253, 255);
    color: rgb(59, 123, 138);
    font-size: 16px; //FS
    .trigger-icon {
      stroke: rgb(59, 123, 138);
      stroke-width: 8; //FS
      width: 16px; //FS
    }

    &.scroll-hint {
      text-align: center;
      position: absolute;
      /* center hint above the first card */
      left: calc((#{$FS-card-width} - #{$scroll-hint-width}) / 2);
      width: $scroll-hint-width;
      top: -$scroll-hint-height;
      height: $scroll-hint-height;
      animation: slide-up 1.2s forwards;
      &.dismissed {
        top: 100vh;
        transition: top ease 3s;
      }
      .content {
        padding: 12px;
      }
    }

    &.selection-hint {
      position: absolute;
      top: $card-peek-height;
      width: $selection-hint-width;
      height: $selection-hint-height;
      left: 0;
      &:not(.scroll-initiated) {
        visibility: hidden;
      }
      &.scroll-initiated {
        transition: left ease 1s;
        left: $FS-card-width;
      }
      &.dismissed {
        transition: left ease 1s;
        left: 0;
      }
      .content {
        padding: 20px;
        svg {
          position: absolute;
          top: 44%;
          right: 20px;
        }
        .maximum {
          display: block;
        }
      }
    }
    &.max-point-hint {
      position: absolute;
      width: $max-point-hint-width;
      height: $max-point-hint-height;
      left: calc((#{$FS-dock-width} - #{$max-point-hint-width}) / 2);
      &:not(.triggered) {
        display: none;
      }
      &.triggered {
        animation: pop-up .5s forwards;
        &.dismissed {
          animation: descend-then-disappear 1s forwards;
        }
      }
      .content {
        text-align: center;
        padding: 20px;
      }
      .trigger-icon {
        position: absolute;
        top: 10px;
        right: 10px;
      }
    }
  }

  .card-dock {
    height: 100%;

    // dock always takes up 3-card width (when screen ample size)
    width: $FS-dock-width;
    // card-table takes up the actual width of the cards
    &.card-count-1 .card-table {
      width: $FS-card-width * 1;
    }
    &.card-count-2 .card-table {
      width: $FS-card-width * 2;
    }
    &.card-count-3 .card-table {
      width: $FS-card-width * 3;
    }

    // the card-dock is centered (unmoved by card-count)
    margin-left: calc((100vw - #{$FS-dock-width}) / 2);
    @media screen and (max-width: $FS-dock-width) {
      // but don't allow it to overflow left side of screen
      margin-left: 0;
      // nor the empty portion of the dock to overflow the right
      width: 100%;
    }

    .card-table {
      position: relative;
      /* top of card should stick up above window bottom */
      top: -$card-peek-height; //FS
      // tough to mesh with card animation onto screen
      // box-shadow: rgba(0, 0, 0, 0.1) -2px -4px 10px 2px;

      .row {
        height: 100%; //?
        display: flex;
        // just so it appears above dismissed user-hints
        position: relative;
      }

      .card {
        max-width: $FS-card-width; //FS
        flex: 1 0 0;
        // height: 100%;
        display: inline-block;
        // vertical-align: top;

        animation: slide-up .8s forwards;
      }

      .cell {
        // don't add different side padding for different cell types
        // or cells won't align vertically
        padding: 10px; //FS
        // display: inline-block;
        // box-sizing: border-box;
        height: 100%; //?
        position: relative;
        .property-name .trigger-icon {
          position: absolute;
          width: 14px;
          right: 5px;
          top: 9px;
        }
        .property-name,
        .location-title {
          font-weight: 300;
          font-size: 12px;
          letter-spacing: 0.1em;
          text-transform: uppercase;
        }
        .location-title {
          padding-top: 3px;
          white-space: nowrap;
          text-overflow: ellipsis;
          overflow: hidden;
        }
        .location-cell-content:not(:last-child) {
          padding-bottom: 5px;
        }

        &.feature-header {
          .property-name {

            font-weight: 700;
            text-align: center;
          }
          .value {
            padding: 0;
          }
        }

        .value {
          // overflow: hidden;
          padding-top: 4px;
          font-size: 14px; //FS

          a {
            display: block;
            cursor: pointer;
            padding-bottom: 8px;
          }
        }

        &.expandible {
          max-height: 3000px;
          transition: max-height ease-in .2s;
          overflow: hidden;

          &:not(.expanded) {
            transition: max-height ease-out .2s;
            // important because it has to override the inline style set by JS
            max-height: 75px !important;

            &:before {
              height: 20px;
            }
          }
          // gradient text to fade unexpanded cells
          &:before {
            content: '';
            width: 100%;
            height: 0px;
            transition: height ease-in-out .3s;
            position: absolute;
            left: 0;
            bottom: 0;
            // appropriate color given with alternating row colors
          }
        }

      }

      // HEADER (NAME) STYLES
      .row.header {
        border-top-left-radius: 12px;
        border-top-right-radius: 12px;
        height: $card-peek-height;

        .card {
          border-top-width: 8px;
          border-top-style: solid;
          &.past {
            border-top-color: $color-past;
          }
          &.ongoing {
            border-top-color: $color-ongoing;
          }
          &.proposed {
            border-top-color: $color-proposed;
          }
          &:first-child {
            border-top-left-radius: 3px;
          }
          &:last-child {
            border-top-right-radius: 3px;
          }
          &:not(first-child) {
            // to compensate for border-left added to other cells
            // width: $FS-card-width + 1px;
          }

          .cell {
            padding-top: 20px; //FS
            // height: 100px;
            font-size: 14px; //FS
            line-height: 21px; //FS
            letter-spacing: 0.03em;
            word-wrap: break-word;
            /* so trigger has a positioned element to hang onto */
            position: relative;
            font-weight: 700;

            .remove-icon {
              position: absolute;
              width: 14px; //FS
              top: 6px; //FS
              right: 6px; //FS
            }
          }
        }
      }


    }

    /* alternating row colors */
    .row:nth-child(odd) .card {
      background-color: $light-gray;
      .cell.expandible:not(.expanded):before {
        // appropriate color for text fade
        background: linear-gradient(transparent, $light-gray 15px);
      }
    }
    .row:nth-child(even) .card {
      background-color: white;
      .cell.expandible:not(.expanded):before {
        // appropriate color for text fade
        background: linear-gradient(transparent, white 15px);
      }
    }
    .row .card .cell {
      border: solid $trans-middle-gray .5px;
    }
  }
}

@media (max-width: 2 * $FS-card-width) {
  /* INTRO PANEL */
  .intro-panel {
    top: calc(#{$SS-legend-height} + #{$FS-boundary-padding});
    bottom: $FS-boundary-padding;
    right: 0;
    width: 100%;
    z-index: 100;
    .content {
      padding: 45px;
    }
    &.closed {
      left: -100%;
    }
    .info-icon {
      top: calc(#{$SS-legend-height} + #{$FS-boundary-padding} + #{$intro-panel-icon-offset});
    }
  }

  /* LEGEND */
  .legend {
    position: fixed;
    top: 0;
    right: 0;
    width: 100%;
    height: $SS-legend-height;
    padding: 0;
    background: white;
  }
  .legend .content {
    padding: 16px;
    font-size: 18px;
    letter-spacing: 0.1em;
  }
  .legend i {
    width: 14px;
    height: 14px;
    border-radius: 7px;
    margin-right: 14px;
  }
  .legend .trigger-icon {
    width: 25px;
    right: 10px;
    top: 10px;
  }

  /* DOCK */
  /* for smaller screens, don't "dock" */
  .card-dock-container {
    width: unset;
    min-width: 100vw;

    .user-hint{
      &.scroll-hint {
        left: calc(50vw - (#{$scroll-hint-width} / 2));
      }
      &.selection-hint {
        top: 0;
        &.scroll-initiated {
          transition: top ease 0.8s;
          top: -$selection-hint-height;
          left: calc(50vw - (#{$selection-hint-width}) / 2);
          &.dismissed {
            transition: top ease 3s;
            top: 100vh;
          }
        }
      }
    }

    .card-dock {
      width: 100%;

      &.card-count-1 .card-table .card {
        // width: 100%;
        max-width: unset;
      }
      &.card-count-1 .card-table,
      &.card-count-2 .card-table,
      &.card-count-3 .card-table {
        width: 100%;
        .card {
          width: $FS-card-width;
        }
      }
    }
  }
}

@keyframes ball-pulse {
  0%, 100%, 60% {
    opacity: 1;
    -webkit-transform: scale(1);
    transform: scale(1);
  }
  30% {
      opacity: .1;
      -webkit-transform: scale(.01);
      transform: scale(.01);
  }
}
@keyframes slide-right {
  from {
    transform: translate(-$FS-card-width);
    z-index: 1;
  }
  to {
    transform: translate(0);
    z-index: 20;
  }
}
@keyframes slide-left {
  from {
    transform: translate(100vw);
  }
  to {
    transform: translate(0);
  }
}
@keyframes slide-up {
  from {
    transform: translate(0, 100vh);
  }
  to {
    transform: translate(0);
  }
}
@keyframes pop-up {
  from {
    transform: translate(0, 0);
  }
  to {
    transform: translate(0, -$max-point-hint-height);
  }
}
@keyframes descend-then-disappear {
  0% {
    transform: translate(0, -$max-point-hint-height);
  }
  99% {
    // annoying work-around because display: none can't be set in an animation
    transform: translate(0, 0) scale(1, 1);
    visibility: visible;
  }
  100% {
    transform: scale(0, 0);
    visibility: hidden;
  }
}
