{"version":3,"sources":["TriggerIcon.js","CardDock.js","Legend.js","Tooltip.js","App.js","index.js"],"names":["ICON_TYPE","TriggerIcon","props","this","onClick","x1","x2","y1","y2","icon","points","classes","iconType","getRemove","getExpand","getCollapse","console","error","inBrackets","getBracketWrap","viewBox","className","React","Component","PROPERTY_LIST","EXPANDIBLE_LIST","FORCE_UNIFORM_VALUE","convertToSpreadsheetFormat","property","split","map","ltr","toLowerCase","join","CardDock","state","minimized","expandedProperties","removeCard","bind","slideDock","toggleDock","maximizeDock","toggleProperty","id","e","deltaY","setState","expanded","cardData","experimentCardSet","eid","name","type","key","isFeatureHeader","startsWith","slice","expandible","getIsExpandible","expandIcon","cellClass","valueClass","propertyCells","cellContent","getCellContent","_","some","expCardSet","length","includes","getLocationCellContent","getLinksContent","spreadsheetProperty","locationOneData","otherLocationsData","firstValue","uniformValue","every","l","href","target","locationData","location","title","linkMap","orderedLinks","forEach","n","urlFieldName","urlValue","titleFieldName","titleValue","push","link","cardCount","String","onWheel","onDoubleClick","onTouchStart","getNames","getRows","PureComponent","Legend","toggleExpand","Tooltip","left","top","adjusted","ref","createRef","nextProps","expId","x","y","adjustPosition","current","getBoundingClientRect","tooltipWidth","width","tooltipHeight","height","document","getElementById","windowWidth","windowHeight","POINT_BUFFER","otherLocations","hoveredClass","otherLocationElements","style","visibility","getLocations","mapboxgl","accessToken","process","load","prototype","Object","defineProperty","value","search","rawPos","pos","substring","experimentsData","features","experimentsReq","XMLHttpRequest","addEventListener","source","req","rows","JSON","parse","responseText","feed","entry","properties","keys","filter","p","endsWith","substr","items","r","ri","row","$t","indexOf","geometry","coordinates","longitude","latitude","getSource","setData","reqHandler","open","send","App","lat","lng","zoom","hovered","selectedIds","isTouchScreen","getCardDock","getTooltip","getFeaturesByExperimentId","Map","container","mapContainer","styleData","center","on","featuresOnUnhover","getCenter","toFixed","getZoom","featuresOnClick","featuresOnHover","touchstart","call","_data","f","idx","alreadySelected","splice","log","setFeatureState","selected","getCanvas","cursor","point","hover","el","ReactDOM","render"],"mappings":"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","file":"static/js/main.01f619cf.chunk.js","sourcesContent":["import React from 'react';\n\nconst ICON_TYPE = {\n  REMOVE: 'remove',\n  EXPAND: 'expand',\n  COLLAPSE: 'collapse'\n};\n\nclass TriggerIcon extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  onClick() {\n    this.props.onClick();\n  }\n\n  getRemove() {\n    return (\n      <>\n        <line x1='15' x2='85' y1='15' y2='85'/>\n        <line x1='15' x2='85' y1='85' y2='15'/>\n      </>\n    )    \n  }\n  \n  getExpand() {\n    return (\n      <>\n        <line x1='15' x2='85' y1='50' y2='50'/>\n        <line x1='50' x2='50' y1='15' y2='85'/>\n      </>\n    )    \n  }\n\n  getCollapse() {\n    return (\n      <>\n        <line x1='20' x2='80' y1='50' y2='50'/>\n      </>\n    )    \n  }\n  \n  getBracketWrap(icon) {\n    return (\n      <>\n        <polyline points='15,0 0,0 0,100 15,100'   />\n          {icon}\n        <polyline points='85,0 100,0 100,100 85,100'   />\n      </>\n    )    \n  }\n  \n  render() {\n    let icon;\n    let classes = 'trigger-icon ';\n    switch (this.props.iconType) {\n      case ICON_TYPE.REMOVE:\n        icon = this.getRemove();\n        classes += 'remove-icon';\n        break;\n      case ICON_TYPE.EXPAND:\n        icon = this.getExpand();\n        classes += 'expand-icon';\n        break;\n      case ICON_TYPE.COLLAPSE:\n        icon = this.getCollapse();\n        classes += 'collapse-icon';\n        break;\n      default:\n        console.error('incorrect type');\n    }\n\n    if (this.props.inBrackets) {\n      icon = this.getBracketWrap(icon);\n    }\n\n    return (\n      <svg onClick={this.props.onClick} viewBox='0 0 100 100' className={classes}>\n        {icon}\n      </svg>\n    )\n  }\n}\n\nexport default TriggerIcon;\nexport { ICON_TYPE };\n","import React from 'react';\nimport _ from 'lodash';\nimport TriggerIcon, { ICON_TYPE } from './TriggerIcon';\n\n\n// TODO: turn to objects with spreadName, isExpandible, etc (stab)\nconst PROPERTY_LIST = [\n  'Location',\n  'Implementation Dates',\n  'Number of Recipients',\n  '*ORGANIZATIONAL FEATURES',\n  'Implementing Agency',\n  'Research Agency',\n  'Funding Agency',\n  '*IMPLEMENTATION FEATURES',\n  'Type of Targeting',\n  'Unit of Recipient',\n  'Amount of Transfer',\n  'Frequency of Payment',\n  'Method of Evaluation',\n  'Additional Notes of Interest',\n  'Link to Website',\n  'Link to Related Resources'\n];\n\nconst EXPANDIBLE_LIST = [\n  'Implementing Agency',\n  'Research Agency',\n  'Funding Agency',\n  'Type of Targeting',\n  'Amount of Transfer',\n  'Additional Notes of Interest',\n  'Link to Related Resources'\n];\n\nconst LINK_URL_TEXT = 'Link to Related Resource';\nconst LINK_TITLE_TEXT = 'Link title';\n\nconst FORCE_UNIFORM_VALUE = ['Link to Website'];\n\n// TODO: make more robust (stab)\nconst convertToSpreadsheetFormat = property => {\n  return property.split('').map(ltr => {\n    if (ltr === ' ') {\n      return '';\n    } else {\n      return ltr.toLowerCase();\n    }\n  }).join('');\n}\n\n// pure component? (shallow compare map features?) (perf)\nclass CardDock extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = { minimized: true, expandedProperties: {} };\n\n    this.removeCard = this.removeCard.bind(this);\n    this.slideDock = this.slideDock.bind(this);\n    this.toggleDock = this.toggleDock.bind(this);\n    this.maximizeDock = this.maximizeDock.bind(this);\n    this.toggleProperty = this.toggleProperty.bind(this);\n  }\n\n  removeCard(id) {\n    this.props.removeCard(id);\n  }\n\n  slideDock(e) {\n    if (e.deltaY && e.deltaY > 0) {\n      this.setState({ minimized: false });\n    }\n  }\n\n  toggleDock() {\n    // TODO: call toggle? or remove, make only scroll-controlled\n    this.setState(state => ({ minimized: !this.state.minimized }));\n  }\n\n  maximizeDock() {\n    // TODO: call toggle? or remove, make only scroll-controlled\n    this.setState(state => ({ minimized: false }));\n  }\n\n  toggleProperty(property, expanded) {\n    const expandedProperties = {...this.state.expandedProperties};\n    expandedProperties[property] = !expanded;\n    this.setState({ expandedProperties });\n  }\n\n  getNames() {\n    // TODO: don't bind in render (perf)\n    return this.props.cardData.map(experimentCardSet => {\n      const { eid, name, type } = experimentCardSet[0];\n      const classes = 'name ' + type;\n      return (\n        <td key={'name'+eid} className={classes}>\n          {name||'(none)'}\n          <TriggerIcon iconType={ICON_TYPE.REMOVE} onClick={this.removeCard.bind(this, eid)} />\n        </td>\n    )});\n  }\n\n  getRows() {\n    return PROPERTY_LIST.map(property => {\n      const isFeatureHeader = property.startsWith('*');\n      if (isFeatureHeader) {\n        property = property.slice(1);\n      }\n\n      const expandible = this.getIsExpandible(property);\n      // const expandible = true;\n      const expanded = !!this.state.expandedProperties[property];\n\n      let expandIcon = null;\n      if (expandible) {\n        // TODO: also don't bind in render (perf)\n        const iconType = expanded ? ICON_TYPE.COLLAPSE : ICON_TYPE.EXPAND;\n        expandIcon = (\n          <TriggerIcon\n            onClick={this.toggleProperty.bind(this, property, expanded)}\n            iconType={iconType}\n          />\n        );\n      }\n\n      let cellClass = 'property-cell';\n      if (expandible) {\n        cellClass += ' expandible';\n      }\n      if (isFeatureHeader) {\n        cellClass += ' feature-header';\n      }\n  \n      let valueClass = 'property-value';\n      if (expanded) {\n        valueClass += ' expanded';\n      }\n\n      const propertyCells = this.props.cardData.map(experimentCardSet => {\n        \n        const cellContent = this.getCellContent(experimentCardSet, property);\n        return (\n          <td className={cellClass} key={property+'-td-'+experimentCardSet[0].eid}>\n            <div className='property-name'>{property}{expandIcon}</div>\n            <div className={valueClass}>{cellContent}</div>\n          </td>\n      )});\n      return <tr className='property-row' key={property}>{propertyCells}</tr>;\n    });\n  }\n\n  getIsExpandible(property) {\n    // 1) not expandible => F 2) has multiple locations w/diff values => T 3) sole value > 40Ms\n    if (property === 'Location') {\n      // if any experimint in the card dock has multiple locations, the cell should be expandible\n      return _.some(this.props.cardData, expCardSet => expCardSet.length > 1);\n    }\n    return EXPANDIBLE_LIST.includes(property);\n  }\n\n  getCellContent(experimentCardSet, property) {\n    if (property === 'Location') {\n      return this.getLocationCellContent(experimentCardSet);\n    } else if (property.startsWith('*')) {\n      return null;\n    } else if (property.startsWith(LINK_URL_TEXT)) {\n      return this.getLinksContent(experimentCardSet);\n    }\n\n    const spreadsheetProperty = convertToSpreadsheetFormat(property);\n\n    const [locationOneData, ...otherLocationsData] = experimentCardSet;\n    const firstValue = locationOneData[spreadsheetProperty];\n    const uniformValue = FORCE_UNIFORM_VALUE.includes(property) || _.every(otherLocationsData, l => l[spreadsheetProperty] === firstValue);\n    \n    let cellContent;\n    if (property.startsWith('Link to Website') && firstValue.includes('.')) {\n      cellContent = <a href={firstValue} target=\"_blank\">{firstValue}</a>;\n    } else if (uniformValue) {\n      cellContent = firstValue;\n    } else {\n      // break cell into block for each location, as they have different values\n      cellContent = experimentCardSet.map(locationData => {\n        return (\n          <div key={`cell-content-${spreadsheetProperty}-${locationData.eid}-${locationData.location}`}>\n            <div \n              title={locationData.location}\n              className='property-location-title'\n            >\n              {locationData.location}\n            </div>\n            {locationData[spreadsheetProperty]}\n          </div>\n        )\n      })\n    }\n\n    return <>{cellContent}</>;\n  }\n\n  getLocationCellContent(experimentCardSet) {\n    const cellContent = experimentCardSet.map(locationData => (\n      <div \n        title={locationData.location}\n        className='location-cell-content'\n        key={`cell-content-location-${locationData.eid}-${locationData.location}`}\n      >\n        {locationData.location}\n      </div>\n    ));\n    return <>{cellContent}</>;\n  }\n\n  getLinksContent(experimentCardSet) {\n    const linkMap = {};\n    const orderedLinks = [];\n    experimentCardSet.forEach(locationData => {\n      for (let n = 0; n < 8; n++) {\n        const urlFieldName = `${LINK_URL_TEXT} ${n}`;\n        const urlValue = locationData[convertToSpreadsheetFormat(urlFieldName)];\n        if (urlValue && !linkMap[urlValue]) {\n          linkMap[urlValue] = true;\n          const titleFieldName = `${LINK_TITLE_TEXT} ${n}`;\n          const titleValue = locationData[convertToSpreadsheetFormat(titleFieldName)];\n          orderedLinks.push({ urlValue, titleValue: titleValue || urlValue });\n        }\n      }\n    });\n\n   return (\n      <div \n        key={`cell-content-links-${experimentCardSet[0].eid}`}\n      >\n        {orderedLinks.map(link => (\n          <a key={link.urlValue} href={link.urlValue} target=\"_blank\">{link.titleValue}</a>\n        ))}\n      </div>\n    );\n  }\n    \n  render() {\n    let classes = 'card-dock';\n    const cardCount = String(this.props.cardData.length);\n    classes += ` card-count-${cardCount}`;\n    if (!this.state.minimized) {\n      classes += ' maximized';\n    }\n\n    return (\n      <div\n        onWheel={this.slideDock}\n        onDoubleClick={this.toggleDock}\n        onTouchStart={this.maximizeDock}\n      >\n        <table className={classes}>\n          <thead>\n            <tr>{this.getNames()}</tr>\n          </thead>\n          <tbody>\n            {this.getRows()}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nexport default CardDock;\n","import React from 'react';\nimport TriggerIcon, { ICON_TYPE } from './TriggerIcon';\n\nclass Legend extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { expanded: true };\n\n    this.toggleExpand = this.toggleExpand.bind(this);\n  }\n\n  toggleExpand() {\n    this.setState(state => ({ expanded: !state.expanded }));\n  }\n\n  render() {\n    let classes = 'legend';\n    if (!this.state.expanded) {\n      classes += ' hidden';\n    }\n\n    const iconType = this.state.expanded ? ICON_TYPE.COLLAPSE : ICON_TYPE.EXPAND;\n    return (\n      <div className={classes}>\n          <TriggerIcon onClick={this.toggleExpand} inBrackets={true} iconType={iconType} />\n          <div className='content'>\n            <div><i className='past' />Past Experiments</div>\n            <div><i className='ongoing' />Ongoing Experiments</div>\n            <div><i className='proposed' />Proposed Experiments</div>\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default Legend;\n","import React from 'react';\n\nconst TOOLTIP_DIMENSIONS = { width: 200, height: 175 };\nconst POINT_BUFFER = 7;\n\nclass Tooltip extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      left: 0,\n      top: 0,\n      adjusted: false\n    };\n\n    this.ref = React.createRef();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { expId } = nextProps;\n    if (this.props.expId === expId || !expId) {\n      // if we're still hovering the same point, don't worry about updating\n      return;\n    }\n\n    // The following steps insure a tooltip doesn't flow outside of the window bounds:\n    // 1] when we hover a new point, we initially render without adjusting the tooltip location\n    this.setState({ \n      adjusted: false,\n      left: nextProps.x,\n      top: nextProps.y\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.adjusted || !this.props.expId) {\n      // 6] location has already been adjusted, so don't trigger a rerender\n      return;\n    }\n\n    this.adjustPosition();\n  }\n\n  adjustPosition() {\n    // 3] after the initial render, we have access to the tooltip's DOM node and can tell it's size\n    const { width: tooltipWidth, height: tooltipHeight } = this.ref.current.getBoundingClientRect();\n    const windowElement = document.getElementById('root');\n    const { width: windowWidth, height: windowHeight } = windowElement.getBoundingClientRect();\n    \n    let { left, top } = this.state;\n    // by default, tooltip appears above the point\n    top -= (tooltipHeight + POINT_BUFFER);\n    if (top < 0) {\n      // if it would run off the top of the screen, shift it below the point\n      top += tooltipHeight + POINT_BUFFER*2;\n\n      if ((top + tooltipHeight) > windowHeight) {\n        // ...unless it would then run off the bottom, in which case set it as high as possible\n        top = 1;\n      }\n    }\n\n    left += POINT_BUFFER;\n    if (left + tooltipWidth > windowWidth) {\n      // if the tooltip would run off the right of the screen, shift it left of the point\n      left -= (tooltipWidth + POINT_BUFFER*2);\n\n      if (left < 0) {\n        // ...unless it would then run off the left, in which case set it up against the right border\n        left = windowWidth - (tooltipWidth + 2);\n      }\n    }\n\n    // 4] record our adjusted coordinates, which will trigger a rerender\n    this.setState({ left, top, adjusted: true });\n  }\n  \n  getLocations() {\n    const { location, otherLocations } = this.props;\n    let hoveredClass = 'hovered-location';\n    let otherLocationElements = null;\n\n    if (otherLocations.length) {\n      hoveredClass += ' emphasized';\n      otherLocationElements = otherLocations.map(l => <p key={l}>{l}</p>);\n    }\n\n    return (\n      <>\n        <p className={hoveredClass}>{location}</p>\n        {otherLocationElements}\n      </>\n    )\n  }\n\n  render() {\n    const { expId, name, type } = this.props;\n    if (!expId) {\n      return null;\n    }\n\n    let style = {};\n    if (!this.state.adjusted) {\n      // 2] hide this initial render so user doesn't see tooltip \"jump\"\n      style = { visibility: 'hidden', left: '0px', top: '0px' };\n    } else {\n      // 5] finally, our tooltip can be told where to properly render\n      style = { left: this.state.left + 'px', top: this.state.top + 'px' };\n    }\n\n    const classes = 'tooltip ' + type;\n    return (\n      <div className={classes} style={style} ref={this.ref}>\n        <div className='name'>{name||'(none)'}</div>\n        <div className='detail'>\n          <p className='location-title'>Location:</p>\n          {this.getLocations()}\n        </div>\n        <p className='click-hint'>click point for more info</p>\n      </div>\n    )\n  }\n}\n\nexport default Tooltip;\n","import CardDock from './CardDock';\nimport Legend from './Legend';\nimport React from 'react';\nimport Tooltip from './Tooltip';\nimport mapboxgl from 'mapbox-gl';\nimport _ from 'lodash';\nimport styleData from './style.json';\nimport './App.css';\n\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_TOKEN;\nconst MAX_SELECTED_POINTS = 3;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lat: 40.66995747013945,\n      lng: -103.59179687498357,\n      zoom: 3,\n      hovered: {},\n      selectedIds: [],\n      isTouchScreen: false\n    };\n\n    this.map = null;\n    this.getCardDock = this.getCardDock.bind(this);\n    this.getTooltip = this.getTooltip.bind(this);\n    this.removeCard = this.removeCard.bind(this);\n    this.getFeaturesByExperimentId = this.getFeaturesByExperimentId.bind(this);\n  }\n\n  componentDidMount() {\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: styleData,\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom,\n    });\n    \n    this.map.on('move', () => {\n      this.featuresOnUnhover();\n      this.setState({\n        lng: this.map.getCenter().lng.toFixed(4),\n        lat: this.map.getCenter().lat.toFixed(4),\n        zoom: this.map.getZoom().toFixed(2)\n      });\n    });\n    \n    this.map.on('click', 'experimentSites', this.featuresOnClick.bind(this));\n    this.map.on('mouseenter', 'experimentSites', this.featuresOnHover.bind(this));\n    this.map.on('mouseleave', 'experimentSites', this.featuresOnUnhover.bind(this));\n\n    this.map.on('touchstart', 'experimentSites', this.touchstart.bind(this));\n    \n    load.call(this); \n  }\n  \n  touchstart(e) {\n    this.setState({ isTouchScreen: true });\n  }\n\n  getFeaturesByExperimentId(expId) {\n    const { features } = this.map.getSource('experiments')._data;\n    return features.filter(f => f.id === expId).map(f => f.properties);\n  }\n  \n  featuresOnClick(e) {\n    const { id: expId } = e.features[0];\n    const selectedIds = [...this.state.selectedIds];\n    const idx = selectedIds.indexOf(expId);\n    const alreadySelected = idx > -1;\n\n    if (!alreadySelected) {\n      if (selectedIds.length >= MAX_SELECTED_POINTS) {\n        console.log('OH SHET!');\n        // warn user\n        return;\n      } else {\n        selectedIds.push(expId);\n      }\n    } else {\n      selectedIds.splice(idx, 1);\n    }\n\n    this.setState({ selectedIds });\n    this.map.setFeatureState({\n        source: 'experiments',\n        id: expId\n      }, { selected: !alreadySelected }\n    );\n  }\n\n  featuresOnHover(e) {\n    if (this.state.isTouchScreen) {\n      // devices with touch screens shouldn't have tooltips\n      return;\n    }\n    this.map.getCanvas().style.cursor = 'pointer';\n    const { id: expId, properties } = e.features[0];    \n    const { name, location, type } = properties;\n    const { x, y } = e.point;\n\n    this.setState({ hovered: { expId, name, location, type, x, y } });\n    this.map.setFeatureState({\n        source: 'experiments',\n        id: expId\n      }, { hover: true }\n    );\n  }\n\n  featuresOnUnhover() {\n    if (this.state.isTouchScreen || !this.state.hovered.expId) {\n      return;\n    }\n    this.map.getCanvas().style.cursor = '';\n    this.map.setFeatureState({\n        source: 'experiments',\n        id: this.state.hovered.expId\n      }, { hover: false }\n    );\n\n    this.setState({ hovered: {} });\n  }\n\n  removeCard(expId) {\n    const selectedIds = [...this.state.selectedIds];\n    const idx = selectedIds.indexOf(expId);\n    selectedIds.splice(idx, 1);\n\n    this.setState({ selectedIds });\n    this.map.setFeatureState({\n        source: 'experiments',\n        id: expId\n      }, { selected: false }\n    );\n  }\n\n  getTooltip() {\n    const { expId, name, location, type, x, y } = this.state.hovered;\n    let otherLocations = [];\n    if (expId) {\n      const features = this.getFeaturesByExperimentId(expId);\n      otherLocations = features\n        .map(f => f.location)\n        .filter(l => l !== location);\n    }\n    return <Tooltip expId={expId} name={name} location={location} otherLocations={otherLocations} type={type} x={x} y={y}/>;\n  }\n\n  getCardDock() {\n    if (!this.map || !this.state.selectedIds.length) {\n      return null;\n    }\n\n    const cardData = this.state.selectedIds.map(this.getFeaturesByExperimentId);\n    return <CardDock removeCard={this.removeCard} cardData={cardData} />\n  }\n  \n  render() {\n    return (\n      <div className='app'>\n        {this.getCardDock()}\n        {this.getTooltip()}\n        <div ref={el => this.mapContainer = el} className='map-container' />\n        <Legend />\n      </div>\n    )\n  }\n}\n\nfunction load () {\n  // startsWith polyfill\n  if (!String.prototype.startsWith) {\n    Object.defineProperty(String.prototype, 'startsWith', {\n        value: function(search, rawPos) {\n            var pos = rawPos > 0 ? rawPos|0 : 0;\n            return this.substring(pos, pos + search.length) === search;\n        }\n    });\n  }\n\n  var experimentsData = { type: 'FeatureCollection', features: [] };\n\n  const reqHandler = (source, req) => {\n    var rows = JSON.parse(req.responseText).feed.entry;\n    var properties = Object.keys(rows[0])\n      .filter(function (p) { \n        return p.startsWith('gsx$') & !p.endsWith('_db1zf');\n      })\n      .map(function (p) { return p.substr(4); });\n    \n    var items = rows.map(function (r, ri) {\n      var row = {};\n      properties.forEach(function (p) {\n        row[p] = r['gsx$' + p].$t === '' ? null : r['gsx$' + p].$t;\n        // mapbox wants numeric lat/long, and coerces id to num (so avoid type error headache)\n        if (['latitude', 'longitude', 'eid', 'uid'].indexOf(p) !== -1) {\n          row[p] = +row[p];\n        }\n        if (row[p] === null) {\n          row[p] = '';\n        }\n      });\n      return {\n        type: 'Feature',\n        id: row.eid,\n        geometry: {\n          type: 'Point',\n          coordinates: [row.longitude, row.latitude]\n        },\n        properties: row\n      };\n    });\n\n    experimentsData = { type: 'FeatureCollection', features: items };\n    this.map.getSource('experiments').setData(experimentsData);\n  }\n\n  // Fetch Local Article Data\n  var experimentsReq = new XMLHttpRequest();\n  experimentsReq.addEventListener('load',  () => { reqHandler('experiments', experimentsReq) });\n  experimentsReq.open('GET', process.env.REACT_APP_SHEET_URL);\n  experimentsReq.send();\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}